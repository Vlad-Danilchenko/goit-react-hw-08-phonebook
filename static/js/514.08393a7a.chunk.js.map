{"version":3,"file":"static/js/514.08393a7a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import styled from '@emotion/styled';\n\nexport const LableName = styled.p`\n  /* font-family: 'Hind'; */\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.61;\n\n  color: #363636;\n\n  margin: 8px;\n`;\nexport const FormInput = styled.input`\n  padding-left: 8px;\n  background-color: #e5f6e7;\n  border-radius: 4px;\n  border: none;\n  width: 300px;\n  height: 36px;\n\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.61;\n  color: #506070;\n`;\nexport const FormButton = styled.button`\n  padding: 8px 18px;\n  margin-top: 16px;\n  min-width: 130px;\n  height: 45px;\n\n  background-color: #202020;\n  border-radius: 4px;\n\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.61;\n  color: #ffffff;\n`;\n","import { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport { LableName, FormInput, FormButton } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (contacts.find(contact => contact.name === name)) {\n      return alert(`${name} is already in contacts.`);\n    } else {\n      const newContact = { name, number };\n      dispatch(addContact(newContact));\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <LableName>Name</LableName>\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <LableName>Number</LableName>\n      <label>\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactUl = styled.ul`\n  list-style: none;\n  text-decoration: none;\n  padding: 0px;\n  margin: 0px;\n`;\nexport const ContactLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import styled from '@emotion/styled';\n\nexport const ContactText = styled.p`\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.61;\n  color: #202020;\n`;\n\nexport const DeleteButton = styled.button`\n  padding: 2px 8px;\n\n  /* min-width: 100px; */\n  height: 30px;\n\n  background-color: #202020;\n  border-radius: 4px;\n\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.61;\n  color: #ffffff;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { ContactText, DeleteButton } from './ContactItem.styled';\n\nexport const ContactItem = ({ id, number, name }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <>\n      <ContactText>\n        {name}: {number}\n      </ContactText>\n      <DeleteButton type=\"button\" onClick={handleDelete}>\n        Delete\n      </DeleteButton>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { ContactUl, ContactLi } from './ContactList.styled';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filterContacts = useSelector(selectFilter);\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterContacts.toLowerCase())\n    );\n  };\n\n  return (\n    <ContactUl>\n      {getVisibleContacts().map(({ id, name, number }) => (\n        <ContactLi key={id}>\n          <ContactItem id={id} name={name} number={number} />\n        </ContactLi>\n      ))}\n    </ContactUl>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterInput = styled.input`\n  padding-left: 8px;\n  background-color: #e5f6e7;\n  border-radius: 4px;\n  border: none;\n  width: 300px;\n  height: 36px;\n\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.61;\n  color: #506070;\n`;\n","import { FilterInput } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filtersSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    const filterValue = event.target.value;\n    dispatch(setFilter(filterValue));\n  };\n\n  return (\n    <form>\n      <label>\n        <FilterInput type=\"text\" onChange={handleFilterChange}></FilterInput>\n      </label>\n    </form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  width: 800px;\n  display: flex;\n`;\nexport const CardContainer = styled.div`\n  padding: 15px;\n  min-width: 350px;\n  margin: 10px;\n\n  background: #ffffff;\n  border-radius: 8px;\n`;\n\nexport const MainTite = styled.h1`\n  text-align: center;\n  /* font-family: 'Montserrat'; */\n  font-style: normal;\n  font-weight: 700;\n  font-size: 35.16px;\n  line-height: 1.37;\n  letter-spacing: -0.02em;\n  color: #202020;\n  margin: 0;\n`;\nexport const Title = styled.h2`\n  text-align: center;\n  /* font-family: 'Montserrat'; */\n  font-style: normal;\n  font-weight: 700;\n  font-size: 22.5px;\n  line-height: 1.42;\n\n  color: #202020;\n  margin: 0;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Container, CardContainer, MainTite, Title } from './Contacts.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <MainTite>Phonebook</MainTite>\n      <Container>\n        <CardContainer>\n          <ContactForm />\n        </CardContainer>\n        <CardContainer>\n          <Title>Contacts</Title>\n          <Filter />\n          {isLoading && !error && <b>Request in progress...</b>}\n          <ContactList />\n        </CardContainer>\n      </Container>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","LableName","styled","FormInput","FormButton","ContactForm","dispatch","useDispatch","useSelector","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","onSubmit","preventDefault","find","contact","alert","newContact","addContact","type","pattern","title","required","onChange","ContactUl","ContactLi","ContactText","DeleteButton","ContactItem","id","onClick","deleteContact","ContactList","filterContacts","toLowerCase","includes","map","FilterInput","Filter","filterValue","target","setFilter","Container","CardContainer","MainTite","Title","useEffect","fetchContacts"],"sourceRoot":""}